/*
Sonarr

Sonarr API docs - The v3 API docs apply to both v3 and v4 versions of Sonarr. Some functionality may only be available in v4 of the Sonarr application.

API version: v4.0.11.2680
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonarr

import (
	"encoding/json"
	"time"
)

// checks if the QueueResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueueResource{}

// QueueResource struct for QueueResource
type QueueResource struct {
	Id *int32 `json:"id,omitempty"`
	SeriesId NullableInt32 `json:"seriesId,omitempty"`
	EpisodeId NullableInt32 `json:"episodeId,omitempty"`
	SeasonNumber NullableInt32 `json:"seasonNumber,omitempty"`
	Series *SeriesResource `json:"series,omitempty"`
	Episode *EpisodeResource `json:"episode,omitempty"`
	Languages []Language `json:"languages,omitempty"`
	Quality *QualityModel `json:"quality,omitempty"`
	CustomFormats []CustomFormatResource `json:"customFormats,omitempty"`
	CustomFormatScore *int32 `json:"customFormatScore,omitempty"`
	Size *float64 `json:"size,omitempty"`
	Title NullableString `json:"title,omitempty"`
	Sizeleft *float64 `json:"sizeleft,omitempty"`
	Timeleft NullableString `json:"timeleft,omitempty"`
	EstimatedCompletionTime NullableTime `json:"estimatedCompletionTime,omitempty"`
	Added NullableTime `json:"added,omitempty"`
	Status *QueueStatus `json:"status,omitempty"`
	TrackedDownloadStatus *TrackedDownloadStatus `json:"trackedDownloadStatus,omitempty"`
	TrackedDownloadState *TrackedDownloadState `json:"trackedDownloadState,omitempty"`
	StatusMessages []TrackedDownloadStatusMessage `json:"statusMessages,omitempty"`
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
	DownloadId NullableString `json:"downloadId,omitempty"`
	Protocol *DownloadProtocol `json:"protocol,omitempty"`
	DownloadClient NullableString `json:"downloadClient,omitempty"`
	DownloadClientHasPostImportCategory *bool `json:"downloadClientHasPostImportCategory,omitempty"`
	Indexer NullableString `json:"indexer,omitempty"`
	OutputPath NullableString `json:"outputPath,omitempty"`
	EpisodeHasFile *bool `json:"episodeHasFile,omitempty"`
}

// NewQueueResource instantiates a new QueueResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueueResource() *QueueResource {
	this := QueueResource{}
	return &this
}

// NewQueueResourceWithDefaults instantiates a new QueueResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueueResourceWithDefaults() *QueueResource {
	this := QueueResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QueueResource) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueResource) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QueueResource) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *QueueResource) SetId(v int32) {
	o.Id = &v
}

// GetSeriesId returns the SeriesId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetSeriesId() int32 {
	if o == nil || IsNil(o.SeriesId.Get()) {
		var ret int32
		return ret
	}
	return *o.SeriesId.Get()
}

// GetSeriesIdOk returns a tuple with the SeriesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetSeriesIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesId.Get(), o.SeriesId.IsSet()
}

// HasSeriesId returns a boolean if a field has been set.
func (o *QueueResource) HasSeriesId() bool {
	if o != nil && o.SeriesId.IsSet() {
		return true
	}

	return false
}

// SetSeriesId gets a reference to the given NullableInt32 and assigns it to the SeriesId field.
func (o *QueueResource) SetSeriesId(v int32) {
	o.SeriesId.Set(&v)
}
// SetSeriesIdNil sets the value for SeriesId to be an explicit nil
func (o *QueueResource) SetSeriesIdNil() {
	o.SeriesId.Set(nil)
}

// UnsetSeriesId ensures that no value is present for SeriesId, not even an explicit nil
func (o *QueueResource) UnsetSeriesId() {
	o.SeriesId.Unset()
}

// GetEpisodeId returns the EpisodeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetEpisodeId() int32 {
	if o == nil || IsNil(o.EpisodeId.Get()) {
		var ret int32
		return ret
	}
	return *o.EpisodeId.Get()
}

// GetEpisodeIdOk returns a tuple with the EpisodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetEpisodeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EpisodeId.Get(), o.EpisodeId.IsSet()
}

// HasEpisodeId returns a boolean if a field has been set.
func (o *QueueResource) HasEpisodeId() bool {
	if o != nil && o.EpisodeId.IsSet() {
		return true
	}

	return false
}

// SetEpisodeId gets a reference to the given NullableInt32 and assigns it to the EpisodeId field.
func (o *QueueResource) SetEpisodeId(v int32) {
	o.EpisodeId.Set(&v)
}
// SetEpisodeIdNil sets the value for EpisodeId to be an explicit nil
func (o *QueueResource) SetEpisodeIdNil() {
	o.EpisodeId.Set(nil)
}

// UnsetEpisodeId ensures that no value is present for EpisodeId, not even an explicit nil
func (o *QueueResource) UnsetEpisodeId() {
	o.EpisodeId.Unset()
}

// GetSeasonNumber returns the SeasonNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetSeasonNumber() int32 {
	if o == nil || IsNil(o.SeasonNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.SeasonNumber.Get()
}

// GetSeasonNumberOk returns a tuple with the SeasonNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetSeasonNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeasonNumber.Get(), o.SeasonNumber.IsSet()
}

// HasSeasonNumber returns a boolean if a field has been set.
func (o *QueueResource) HasSeasonNumber() bool {
	if o != nil && o.SeasonNumber.IsSet() {
		return true
	}

	return false
}

// SetSeasonNumber gets a reference to the given NullableInt32 and assigns it to the SeasonNumber field.
func (o *QueueResource) SetSeasonNumber(v int32) {
	o.SeasonNumber.Set(&v)
}
// SetSeasonNumberNil sets the value for SeasonNumber to be an explicit nil
func (o *QueueResource) SetSeasonNumberNil() {
	o.SeasonNumber.Set(nil)
}

// UnsetSeasonNumber ensures that no value is present for SeasonNumber, not even an explicit nil
func (o *QueueResource) UnsetSeasonNumber() {
	o.SeasonNumber.Unset()
}

// GetSeries returns the Series field value if set, zero value otherwise.
func (o *QueueResource) GetSeries() SeriesResource {
	if o == nil || IsNil(o.Series) {
		var ret SeriesResource
		return ret
	}
	return *o.Series
}

// GetSeriesOk returns a tuple with the Series field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueResource) GetSeriesOk() (*SeriesResource, bool) {
	if o == nil || IsNil(o.Series) {
		return nil, false
	}
	return o.Series, true
}

// HasSeries returns a boolean if a field has been set.
func (o *QueueResource) HasSeries() bool {
	if o != nil && !IsNil(o.Series) {
		return true
	}

	return false
}

// SetSeries gets a reference to the given SeriesResource and assigns it to the Series field.
func (o *QueueResource) SetSeries(v SeriesResource) {
	o.Series = &v
}

// GetEpisode returns the Episode field value if set, zero value otherwise.
func (o *QueueResource) GetEpisode() EpisodeResource {
	if o == nil || IsNil(o.Episode) {
		var ret EpisodeResource
		return ret
	}
	return *o.Episode
}

// GetEpisodeOk returns a tuple with the Episode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueResource) GetEpisodeOk() (*EpisodeResource, bool) {
	if o == nil || IsNil(o.Episode) {
		return nil, false
	}
	return o.Episode, true
}

// HasEpisode returns a boolean if a field has been set.
func (o *QueueResource) HasEpisode() bool {
	if o != nil && !IsNil(o.Episode) {
		return true
	}

	return false
}

// SetEpisode gets a reference to the given EpisodeResource and assigns it to the Episode field.
func (o *QueueResource) SetEpisode(v EpisodeResource) {
	o.Episode = &v
}

// GetLanguages returns the Languages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetLanguages() []Language {
	if o == nil {
		var ret []Language
		return ret
	}
	return o.Languages
}

// GetLanguagesOk returns a tuple with the Languages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetLanguagesOk() ([]Language, bool) {
	if o == nil || IsNil(o.Languages) {
		return nil, false
	}
	return o.Languages, true
}

// HasLanguages returns a boolean if a field has been set.
func (o *QueueResource) HasLanguages() bool {
	if o != nil && !IsNil(o.Languages) {
		return true
	}

	return false
}

// SetLanguages gets a reference to the given []Language and assigns it to the Languages field.
func (o *QueueResource) SetLanguages(v []Language) {
	o.Languages = v
}

// GetQuality returns the Quality field value if set, zero value otherwise.
func (o *QueueResource) GetQuality() QualityModel {
	if o == nil || IsNil(o.Quality) {
		var ret QualityModel
		return ret
	}
	return *o.Quality
}

// GetQualityOk returns a tuple with the Quality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueResource) GetQualityOk() (*QualityModel, bool) {
	if o == nil || IsNil(o.Quality) {
		return nil, false
	}
	return o.Quality, true
}

// HasQuality returns a boolean if a field has been set.
func (o *QueueResource) HasQuality() bool {
	if o != nil && !IsNil(o.Quality) {
		return true
	}

	return false
}

// SetQuality gets a reference to the given QualityModel and assigns it to the Quality field.
func (o *QueueResource) SetQuality(v QualityModel) {
	o.Quality = &v
}

// GetCustomFormats returns the CustomFormats field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetCustomFormats() []CustomFormatResource {
	if o == nil {
		var ret []CustomFormatResource
		return ret
	}
	return o.CustomFormats
}

// GetCustomFormatsOk returns a tuple with the CustomFormats field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetCustomFormatsOk() ([]CustomFormatResource, bool) {
	if o == nil || IsNil(o.CustomFormats) {
		return nil, false
	}
	return o.CustomFormats, true
}

// HasCustomFormats returns a boolean if a field has been set.
func (o *QueueResource) HasCustomFormats() bool {
	if o != nil && !IsNil(o.CustomFormats) {
		return true
	}

	return false
}

// SetCustomFormats gets a reference to the given []CustomFormatResource and assigns it to the CustomFormats field.
func (o *QueueResource) SetCustomFormats(v []CustomFormatResource) {
	o.CustomFormats = v
}

// GetCustomFormatScore returns the CustomFormatScore field value if set, zero value otherwise.
func (o *QueueResource) GetCustomFormatScore() int32 {
	if o == nil || IsNil(o.CustomFormatScore) {
		var ret int32
		return ret
	}
	return *o.CustomFormatScore
}

// GetCustomFormatScoreOk returns a tuple with the CustomFormatScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueResource) GetCustomFormatScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomFormatScore) {
		return nil, false
	}
	return o.CustomFormatScore, true
}

// HasCustomFormatScore returns a boolean if a field has been set.
func (o *QueueResource) HasCustomFormatScore() bool {
	if o != nil && !IsNil(o.CustomFormatScore) {
		return true
	}

	return false
}

// SetCustomFormatScore gets a reference to the given int32 and assigns it to the CustomFormatScore field.
func (o *QueueResource) SetCustomFormatScore(v int32) {
	o.CustomFormatScore = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *QueueResource) GetSize() float64 {
	if o == nil || IsNil(o.Size) {
		var ret float64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueResource) GetSizeOk() (*float64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *QueueResource) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given float64 and assigns it to the Size field.
func (o *QueueResource) SetSize(v float64) {
	o.Size = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *QueueResource) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *QueueResource) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *QueueResource) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *QueueResource) UnsetTitle() {
	o.Title.Unset()
}

// GetSizeleft returns the Sizeleft field value if set, zero value otherwise.
func (o *QueueResource) GetSizeleft() float64 {
	if o == nil || IsNil(o.Sizeleft) {
		var ret float64
		return ret
	}
	return *o.Sizeleft
}

// GetSizeleftOk returns a tuple with the Sizeleft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueResource) GetSizeleftOk() (*float64, bool) {
	if o == nil || IsNil(o.Sizeleft) {
		return nil, false
	}
	return o.Sizeleft, true
}

// HasSizeleft returns a boolean if a field has been set.
func (o *QueueResource) HasSizeleft() bool {
	if o != nil && !IsNil(o.Sizeleft) {
		return true
	}

	return false
}

// SetSizeleft gets a reference to the given float64 and assigns it to the Sizeleft field.
func (o *QueueResource) SetSizeleft(v float64) {
	o.Sizeleft = &v
}

// GetTimeleft returns the Timeleft field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetTimeleft() string {
	if o == nil || IsNil(o.Timeleft.Get()) {
		var ret string
		return ret
	}
	return *o.Timeleft.Get()
}

// GetTimeleftOk returns a tuple with the Timeleft field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetTimeleftOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timeleft.Get(), o.Timeleft.IsSet()
}

// HasTimeleft returns a boolean if a field has been set.
func (o *QueueResource) HasTimeleft() bool {
	if o != nil && o.Timeleft.IsSet() {
		return true
	}

	return false
}

// SetTimeleft gets a reference to the given NullableString and assigns it to the Timeleft field.
func (o *QueueResource) SetTimeleft(v string) {
	o.Timeleft.Set(&v)
}
// SetTimeleftNil sets the value for Timeleft to be an explicit nil
func (o *QueueResource) SetTimeleftNil() {
	o.Timeleft.Set(nil)
}

// UnsetTimeleft ensures that no value is present for Timeleft, not even an explicit nil
func (o *QueueResource) UnsetTimeleft() {
	o.Timeleft.Unset()
}

// GetEstimatedCompletionTime returns the EstimatedCompletionTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetEstimatedCompletionTime() time.Time {
	if o == nil || IsNil(o.EstimatedCompletionTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EstimatedCompletionTime.Get()
}

// GetEstimatedCompletionTimeOk returns a tuple with the EstimatedCompletionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetEstimatedCompletionTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EstimatedCompletionTime.Get(), o.EstimatedCompletionTime.IsSet()
}

// HasEstimatedCompletionTime returns a boolean if a field has been set.
func (o *QueueResource) HasEstimatedCompletionTime() bool {
	if o != nil && o.EstimatedCompletionTime.IsSet() {
		return true
	}

	return false
}

// SetEstimatedCompletionTime gets a reference to the given NullableTime and assigns it to the EstimatedCompletionTime field.
func (o *QueueResource) SetEstimatedCompletionTime(v time.Time) {
	o.EstimatedCompletionTime.Set(&v)
}
// SetEstimatedCompletionTimeNil sets the value for EstimatedCompletionTime to be an explicit nil
func (o *QueueResource) SetEstimatedCompletionTimeNil() {
	o.EstimatedCompletionTime.Set(nil)
}

// UnsetEstimatedCompletionTime ensures that no value is present for EstimatedCompletionTime, not even an explicit nil
func (o *QueueResource) UnsetEstimatedCompletionTime() {
	o.EstimatedCompletionTime.Unset()
}

// GetAdded returns the Added field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetAdded() time.Time {
	if o == nil || IsNil(o.Added.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Added.Get()
}

// GetAddedOk returns a tuple with the Added field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetAddedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Added.Get(), o.Added.IsSet()
}

// HasAdded returns a boolean if a field has been set.
func (o *QueueResource) HasAdded() bool {
	if o != nil && o.Added.IsSet() {
		return true
	}

	return false
}

// SetAdded gets a reference to the given NullableTime and assigns it to the Added field.
func (o *QueueResource) SetAdded(v time.Time) {
	o.Added.Set(&v)
}
// SetAddedNil sets the value for Added to be an explicit nil
func (o *QueueResource) SetAddedNil() {
	o.Added.Set(nil)
}

// UnsetAdded ensures that no value is present for Added, not even an explicit nil
func (o *QueueResource) UnsetAdded() {
	o.Added.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *QueueResource) GetStatus() QueueStatus {
	if o == nil || IsNil(o.Status) {
		var ret QueueStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueResource) GetStatusOk() (*QueueStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *QueueResource) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given QueueStatus and assigns it to the Status field.
func (o *QueueResource) SetStatus(v QueueStatus) {
	o.Status = &v
}

// GetTrackedDownloadStatus returns the TrackedDownloadStatus field value if set, zero value otherwise.
func (o *QueueResource) GetTrackedDownloadStatus() TrackedDownloadStatus {
	if o == nil || IsNil(o.TrackedDownloadStatus) {
		var ret TrackedDownloadStatus
		return ret
	}
	return *o.TrackedDownloadStatus
}

// GetTrackedDownloadStatusOk returns a tuple with the TrackedDownloadStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueResource) GetTrackedDownloadStatusOk() (*TrackedDownloadStatus, bool) {
	if o == nil || IsNil(o.TrackedDownloadStatus) {
		return nil, false
	}
	return o.TrackedDownloadStatus, true
}

// HasTrackedDownloadStatus returns a boolean if a field has been set.
func (o *QueueResource) HasTrackedDownloadStatus() bool {
	if o != nil && !IsNil(o.TrackedDownloadStatus) {
		return true
	}

	return false
}

// SetTrackedDownloadStatus gets a reference to the given TrackedDownloadStatus and assigns it to the TrackedDownloadStatus field.
func (o *QueueResource) SetTrackedDownloadStatus(v TrackedDownloadStatus) {
	o.TrackedDownloadStatus = &v
}

// GetTrackedDownloadState returns the TrackedDownloadState field value if set, zero value otherwise.
func (o *QueueResource) GetTrackedDownloadState() TrackedDownloadState {
	if o == nil || IsNil(o.TrackedDownloadState) {
		var ret TrackedDownloadState
		return ret
	}
	return *o.TrackedDownloadState
}

// GetTrackedDownloadStateOk returns a tuple with the TrackedDownloadState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueResource) GetTrackedDownloadStateOk() (*TrackedDownloadState, bool) {
	if o == nil || IsNil(o.TrackedDownloadState) {
		return nil, false
	}
	return o.TrackedDownloadState, true
}

// HasTrackedDownloadState returns a boolean if a field has been set.
func (o *QueueResource) HasTrackedDownloadState() bool {
	if o != nil && !IsNil(o.TrackedDownloadState) {
		return true
	}

	return false
}

// SetTrackedDownloadState gets a reference to the given TrackedDownloadState and assigns it to the TrackedDownloadState field.
func (o *QueueResource) SetTrackedDownloadState(v TrackedDownloadState) {
	o.TrackedDownloadState = &v
}

// GetStatusMessages returns the StatusMessages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetStatusMessages() []TrackedDownloadStatusMessage {
	if o == nil {
		var ret []TrackedDownloadStatusMessage
		return ret
	}
	return o.StatusMessages
}

// GetStatusMessagesOk returns a tuple with the StatusMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetStatusMessagesOk() ([]TrackedDownloadStatusMessage, bool) {
	if o == nil || IsNil(o.StatusMessages) {
		return nil, false
	}
	return o.StatusMessages, true
}

// HasStatusMessages returns a boolean if a field has been set.
func (o *QueueResource) HasStatusMessages() bool {
	if o != nil && !IsNil(o.StatusMessages) {
		return true
	}

	return false
}

// SetStatusMessages gets a reference to the given []TrackedDownloadStatusMessage and assigns it to the StatusMessages field.
func (o *QueueResource) SetStatusMessages(v []TrackedDownloadStatusMessage) {
	o.StatusMessages = v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *QueueResource) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *QueueResource) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *QueueResource) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *QueueResource) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetDownloadId returns the DownloadId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetDownloadId() string {
	if o == nil || IsNil(o.DownloadId.Get()) {
		var ret string
		return ret
	}
	return *o.DownloadId.Get()
}

// GetDownloadIdOk returns a tuple with the DownloadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetDownloadIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DownloadId.Get(), o.DownloadId.IsSet()
}

// HasDownloadId returns a boolean if a field has been set.
func (o *QueueResource) HasDownloadId() bool {
	if o != nil && o.DownloadId.IsSet() {
		return true
	}

	return false
}

// SetDownloadId gets a reference to the given NullableString and assigns it to the DownloadId field.
func (o *QueueResource) SetDownloadId(v string) {
	o.DownloadId.Set(&v)
}
// SetDownloadIdNil sets the value for DownloadId to be an explicit nil
func (o *QueueResource) SetDownloadIdNil() {
	o.DownloadId.Set(nil)
}

// UnsetDownloadId ensures that no value is present for DownloadId, not even an explicit nil
func (o *QueueResource) UnsetDownloadId() {
	o.DownloadId.Unset()
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *QueueResource) GetProtocol() DownloadProtocol {
	if o == nil || IsNil(o.Protocol) {
		var ret DownloadProtocol
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueResource) GetProtocolOk() (*DownloadProtocol, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *QueueResource) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given DownloadProtocol and assigns it to the Protocol field.
func (o *QueueResource) SetProtocol(v DownloadProtocol) {
	o.Protocol = &v
}

// GetDownloadClient returns the DownloadClient field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetDownloadClient() string {
	if o == nil || IsNil(o.DownloadClient.Get()) {
		var ret string
		return ret
	}
	return *o.DownloadClient.Get()
}

// GetDownloadClientOk returns a tuple with the DownloadClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetDownloadClientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DownloadClient.Get(), o.DownloadClient.IsSet()
}

// HasDownloadClient returns a boolean if a field has been set.
func (o *QueueResource) HasDownloadClient() bool {
	if o != nil && o.DownloadClient.IsSet() {
		return true
	}

	return false
}

// SetDownloadClient gets a reference to the given NullableString and assigns it to the DownloadClient field.
func (o *QueueResource) SetDownloadClient(v string) {
	o.DownloadClient.Set(&v)
}
// SetDownloadClientNil sets the value for DownloadClient to be an explicit nil
func (o *QueueResource) SetDownloadClientNil() {
	o.DownloadClient.Set(nil)
}

// UnsetDownloadClient ensures that no value is present for DownloadClient, not even an explicit nil
func (o *QueueResource) UnsetDownloadClient() {
	o.DownloadClient.Unset()
}

// GetDownloadClientHasPostImportCategory returns the DownloadClientHasPostImportCategory field value if set, zero value otherwise.
func (o *QueueResource) GetDownloadClientHasPostImportCategory() bool {
	if o == nil || IsNil(o.DownloadClientHasPostImportCategory) {
		var ret bool
		return ret
	}
	return *o.DownloadClientHasPostImportCategory
}

// GetDownloadClientHasPostImportCategoryOk returns a tuple with the DownloadClientHasPostImportCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueResource) GetDownloadClientHasPostImportCategoryOk() (*bool, bool) {
	if o == nil || IsNil(o.DownloadClientHasPostImportCategory) {
		return nil, false
	}
	return o.DownloadClientHasPostImportCategory, true
}

// HasDownloadClientHasPostImportCategory returns a boolean if a field has been set.
func (o *QueueResource) HasDownloadClientHasPostImportCategory() bool {
	if o != nil && !IsNil(o.DownloadClientHasPostImportCategory) {
		return true
	}

	return false
}

// SetDownloadClientHasPostImportCategory gets a reference to the given bool and assigns it to the DownloadClientHasPostImportCategory field.
func (o *QueueResource) SetDownloadClientHasPostImportCategory(v bool) {
	o.DownloadClientHasPostImportCategory = &v
}

// GetIndexer returns the Indexer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetIndexer() string {
	if o == nil || IsNil(o.Indexer.Get()) {
		var ret string
		return ret
	}
	return *o.Indexer.Get()
}

// GetIndexerOk returns a tuple with the Indexer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetIndexerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Indexer.Get(), o.Indexer.IsSet()
}

// HasIndexer returns a boolean if a field has been set.
func (o *QueueResource) HasIndexer() bool {
	if o != nil && o.Indexer.IsSet() {
		return true
	}

	return false
}

// SetIndexer gets a reference to the given NullableString and assigns it to the Indexer field.
func (o *QueueResource) SetIndexer(v string) {
	o.Indexer.Set(&v)
}
// SetIndexerNil sets the value for Indexer to be an explicit nil
func (o *QueueResource) SetIndexerNil() {
	o.Indexer.Set(nil)
}

// UnsetIndexer ensures that no value is present for Indexer, not even an explicit nil
func (o *QueueResource) UnsetIndexer() {
	o.Indexer.Unset()
}

// GetOutputPath returns the OutputPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueueResource) GetOutputPath() string {
	if o == nil || IsNil(o.OutputPath.Get()) {
		var ret string
		return ret
	}
	return *o.OutputPath.Get()
}

// GetOutputPathOk returns a tuple with the OutputPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueResource) GetOutputPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutputPath.Get(), o.OutputPath.IsSet()
}

// HasOutputPath returns a boolean if a field has been set.
func (o *QueueResource) HasOutputPath() bool {
	if o != nil && o.OutputPath.IsSet() {
		return true
	}

	return false
}

// SetOutputPath gets a reference to the given NullableString and assigns it to the OutputPath field.
func (o *QueueResource) SetOutputPath(v string) {
	o.OutputPath.Set(&v)
}
// SetOutputPathNil sets the value for OutputPath to be an explicit nil
func (o *QueueResource) SetOutputPathNil() {
	o.OutputPath.Set(nil)
}

// UnsetOutputPath ensures that no value is present for OutputPath, not even an explicit nil
func (o *QueueResource) UnsetOutputPath() {
	o.OutputPath.Unset()
}

// GetEpisodeHasFile returns the EpisodeHasFile field value if set, zero value otherwise.
func (o *QueueResource) GetEpisodeHasFile() bool {
	if o == nil || IsNil(o.EpisodeHasFile) {
		var ret bool
		return ret
	}
	return *o.EpisodeHasFile
}

// GetEpisodeHasFileOk returns a tuple with the EpisodeHasFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueResource) GetEpisodeHasFileOk() (*bool, bool) {
	if o == nil || IsNil(o.EpisodeHasFile) {
		return nil, false
	}
	return o.EpisodeHasFile, true
}

// HasEpisodeHasFile returns a boolean if a field has been set.
func (o *QueueResource) HasEpisodeHasFile() bool {
	if o != nil && !IsNil(o.EpisodeHasFile) {
		return true
	}

	return false
}

// SetEpisodeHasFile gets a reference to the given bool and assigns it to the EpisodeHasFile field.
func (o *QueueResource) SetEpisodeHasFile(v bool) {
	o.EpisodeHasFile = &v
}

func (o QueueResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueueResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.SeriesId.IsSet() {
		toSerialize["seriesId"] = o.SeriesId.Get()
	}
	if o.EpisodeId.IsSet() {
		toSerialize["episodeId"] = o.EpisodeId.Get()
	}
	if o.SeasonNumber.IsSet() {
		toSerialize["seasonNumber"] = o.SeasonNumber.Get()
	}
	if !IsNil(o.Series) {
		toSerialize["series"] = o.Series
	}
	if !IsNil(o.Episode) {
		toSerialize["episode"] = o.Episode
	}
	if o.Languages != nil {
		toSerialize["languages"] = o.Languages
	}
	if !IsNil(o.Quality) {
		toSerialize["quality"] = o.Quality
	}
	if o.CustomFormats != nil {
		toSerialize["customFormats"] = o.CustomFormats
	}
	if !IsNil(o.CustomFormatScore) {
		toSerialize["customFormatScore"] = o.CustomFormatScore
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if !IsNil(o.Sizeleft) {
		toSerialize["sizeleft"] = o.Sizeleft
	}
	if o.Timeleft.IsSet() {
		toSerialize["timeleft"] = o.Timeleft.Get()
	}
	if o.EstimatedCompletionTime.IsSet() {
		toSerialize["estimatedCompletionTime"] = o.EstimatedCompletionTime.Get()
	}
	if o.Added.IsSet() {
		toSerialize["added"] = o.Added.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TrackedDownloadStatus) {
		toSerialize["trackedDownloadStatus"] = o.TrackedDownloadStatus
	}
	if !IsNil(o.TrackedDownloadState) {
		toSerialize["trackedDownloadState"] = o.TrackedDownloadState
	}
	if o.StatusMessages != nil {
		toSerialize["statusMessages"] = o.StatusMessages
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	if o.DownloadId.IsSet() {
		toSerialize["downloadId"] = o.DownloadId.Get()
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if o.DownloadClient.IsSet() {
		toSerialize["downloadClient"] = o.DownloadClient.Get()
	}
	if !IsNil(o.DownloadClientHasPostImportCategory) {
		toSerialize["downloadClientHasPostImportCategory"] = o.DownloadClientHasPostImportCategory
	}
	if o.Indexer.IsSet() {
		toSerialize["indexer"] = o.Indexer.Get()
	}
	if o.OutputPath.IsSet() {
		toSerialize["outputPath"] = o.OutputPath.Get()
	}
	if !IsNil(o.EpisodeHasFile) {
		toSerialize["episodeHasFile"] = o.EpisodeHasFile
	}
	return toSerialize, nil
}

type NullableQueueResource struct {
	value *QueueResource
	isSet bool
}

func (v NullableQueueResource) Get() *QueueResource {
	return v.value
}

func (v *NullableQueueResource) Set(val *QueueResource) {
	v.value = val
	v.isSet = true
}

func (v NullableQueueResource) IsSet() bool {
	return v.isSet
}

func (v *NullableQueueResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueueResource(val *QueueResource) *NullableQueueResource {
	return &NullableQueueResource{value: val, isSet: true}
}

func (v NullableQueueResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueueResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


