/*
Sonarr

Sonarr API docs - The v3 API docs apply to both v3 and v4 versions of Sonarr. Some functionality may only be available in v4 of the Sonarr application.

API version: v4.0.12.2823
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonarr

import (
	"encoding/json"
	"time"
)

// checks if the EpisodeResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EpisodeResource{}

// EpisodeResource struct for EpisodeResource
type EpisodeResource struct {
	Id *int32 `json:"id,omitempty"`
	SeriesId *int32 `json:"seriesId,omitempty"`
	TvdbId *int32 `json:"tvdbId,omitempty"`
	EpisodeFileId *int32 `json:"episodeFileId,omitempty"`
	SeasonNumber *int32 `json:"seasonNumber,omitempty"`
	EpisodeNumber *int32 `json:"episodeNumber,omitempty"`
	Title NullableString `json:"title,omitempty"`
	AirDate NullableString `json:"airDate,omitempty"`
	AirDateUtc NullableTime `json:"airDateUtc,omitempty"`
	LastSearchTime NullableTime `json:"lastSearchTime,omitempty"`
	Runtime *int32 `json:"runtime,omitempty"`
	FinaleType NullableString `json:"finaleType,omitempty"`
	Overview NullableString `json:"overview,omitempty"`
	EpisodeFile *EpisodeFileResource `json:"episodeFile,omitempty"`
	HasFile *bool `json:"hasFile,omitempty"`
	Monitored *bool `json:"monitored,omitempty"`
	AbsoluteEpisodeNumber NullableInt32 `json:"absoluteEpisodeNumber,omitempty"`
	SceneAbsoluteEpisodeNumber NullableInt32 `json:"sceneAbsoluteEpisodeNumber,omitempty"`
	SceneEpisodeNumber NullableInt32 `json:"sceneEpisodeNumber,omitempty"`
	SceneSeasonNumber NullableInt32 `json:"sceneSeasonNumber,omitempty"`
	UnverifiedSceneNumbering *bool `json:"unverifiedSceneNumbering,omitempty"`
	EndTime NullableTime `json:"endTime,omitempty"`
	GrabDate NullableTime `json:"grabDate,omitempty"`
	Series *SeriesResource `json:"series,omitempty"`
	Images []MediaCover `json:"images,omitempty"`
}

// NewEpisodeResource instantiates a new EpisodeResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEpisodeResource() *EpisodeResource {
	this := EpisodeResource{}
	return &this
}

// NewEpisodeResourceWithDefaults instantiates a new EpisodeResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEpisodeResourceWithDefaults() *EpisodeResource {
	this := EpisodeResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EpisodeResource) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpisodeResource) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EpisodeResource) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *EpisodeResource) SetId(v int32) {
	o.Id = &v
}

// GetSeriesId returns the SeriesId field value if set, zero value otherwise.
func (o *EpisodeResource) GetSeriesId() int32 {
	if o == nil || IsNil(o.SeriesId) {
		var ret int32
		return ret
	}
	return *o.SeriesId
}

// GetSeriesIdOk returns a tuple with the SeriesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpisodeResource) GetSeriesIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SeriesId) {
		return nil, false
	}
	return o.SeriesId, true
}

// HasSeriesId returns a boolean if a field has been set.
func (o *EpisodeResource) HasSeriesId() bool {
	if o != nil && !IsNil(o.SeriesId) {
		return true
	}

	return false
}

// SetSeriesId gets a reference to the given int32 and assigns it to the SeriesId field.
func (o *EpisodeResource) SetSeriesId(v int32) {
	o.SeriesId = &v
}

// GetTvdbId returns the TvdbId field value if set, zero value otherwise.
func (o *EpisodeResource) GetTvdbId() int32 {
	if o == nil || IsNil(o.TvdbId) {
		var ret int32
		return ret
	}
	return *o.TvdbId
}

// GetTvdbIdOk returns a tuple with the TvdbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpisodeResource) GetTvdbIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TvdbId) {
		return nil, false
	}
	return o.TvdbId, true
}

// HasTvdbId returns a boolean if a field has been set.
func (o *EpisodeResource) HasTvdbId() bool {
	if o != nil && !IsNil(o.TvdbId) {
		return true
	}

	return false
}

// SetTvdbId gets a reference to the given int32 and assigns it to the TvdbId field.
func (o *EpisodeResource) SetTvdbId(v int32) {
	o.TvdbId = &v
}

// GetEpisodeFileId returns the EpisodeFileId field value if set, zero value otherwise.
func (o *EpisodeResource) GetEpisodeFileId() int32 {
	if o == nil || IsNil(o.EpisodeFileId) {
		var ret int32
		return ret
	}
	return *o.EpisodeFileId
}

// GetEpisodeFileIdOk returns a tuple with the EpisodeFileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpisodeResource) GetEpisodeFileIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EpisodeFileId) {
		return nil, false
	}
	return o.EpisodeFileId, true
}

// HasEpisodeFileId returns a boolean if a field has been set.
func (o *EpisodeResource) HasEpisodeFileId() bool {
	if o != nil && !IsNil(o.EpisodeFileId) {
		return true
	}

	return false
}

// SetEpisodeFileId gets a reference to the given int32 and assigns it to the EpisodeFileId field.
func (o *EpisodeResource) SetEpisodeFileId(v int32) {
	o.EpisodeFileId = &v
}

// GetSeasonNumber returns the SeasonNumber field value if set, zero value otherwise.
func (o *EpisodeResource) GetSeasonNumber() int32 {
	if o == nil || IsNil(o.SeasonNumber) {
		var ret int32
		return ret
	}
	return *o.SeasonNumber
}

// GetSeasonNumberOk returns a tuple with the SeasonNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpisodeResource) GetSeasonNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.SeasonNumber) {
		return nil, false
	}
	return o.SeasonNumber, true
}

// HasSeasonNumber returns a boolean if a field has been set.
func (o *EpisodeResource) HasSeasonNumber() bool {
	if o != nil && !IsNil(o.SeasonNumber) {
		return true
	}

	return false
}

// SetSeasonNumber gets a reference to the given int32 and assigns it to the SeasonNumber field.
func (o *EpisodeResource) SetSeasonNumber(v int32) {
	o.SeasonNumber = &v
}

// GetEpisodeNumber returns the EpisodeNumber field value if set, zero value otherwise.
func (o *EpisodeResource) GetEpisodeNumber() int32 {
	if o == nil || IsNil(o.EpisodeNumber) {
		var ret int32
		return ret
	}
	return *o.EpisodeNumber
}

// GetEpisodeNumberOk returns a tuple with the EpisodeNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpisodeResource) GetEpisodeNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.EpisodeNumber) {
		return nil, false
	}
	return o.EpisodeNumber, true
}

// HasEpisodeNumber returns a boolean if a field has been set.
func (o *EpisodeResource) HasEpisodeNumber() bool {
	if o != nil && !IsNil(o.EpisodeNumber) {
		return true
	}

	return false
}

// SetEpisodeNumber gets a reference to the given int32 and assigns it to the EpisodeNumber field.
func (o *EpisodeResource) SetEpisodeNumber(v int32) {
	o.EpisodeNumber = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeResource) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeResource) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *EpisodeResource) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *EpisodeResource) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *EpisodeResource) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *EpisodeResource) UnsetTitle() {
	o.Title.Unset()
}

// GetAirDate returns the AirDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeResource) GetAirDate() string {
	if o == nil || IsNil(o.AirDate.Get()) {
		var ret string
		return ret
	}
	return *o.AirDate.Get()
}

// GetAirDateOk returns a tuple with the AirDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeResource) GetAirDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AirDate.Get(), o.AirDate.IsSet()
}

// HasAirDate returns a boolean if a field has been set.
func (o *EpisodeResource) HasAirDate() bool {
	if o != nil && o.AirDate.IsSet() {
		return true
	}

	return false
}

// SetAirDate gets a reference to the given NullableString and assigns it to the AirDate field.
func (o *EpisodeResource) SetAirDate(v string) {
	o.AirDate.Set(&v)
}
// SetAirDateNil sets the value for AirDate to be an explicit nil
func (o *EpisodeResource) SetAirDateNil() {
	o.AirDate.Set(nil)
}

// UnsetAirDate ensures that no value is present for AirDate, not even an explicit nil
func (o *EpisodeResource) UnsetAirDate() {
	o.AirDate.Unset()
}

// GetAirDateUtc returns the AirDateUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeResource) GetAirDateUtc() time.Time {
	if o == nil || IsNil(o.AirDateUtc.Get()) {
		var ret time.Time
		return ret
	}
	return *o.AirDateUtc.Get()
}

// GetAirDateUtcOk returns a tuple with the AirDateUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeResource) GetAirDateUtcOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.AirDateUtc.Get(), o.AirDateUtc.IsSet()
}

// HasAirDateUtc returns a boolean if a field has been set.
func (o *EpisodeResource) HasAirDateUtc() bool {
	if o != nil && o.AirDateUtc.IsSet() {
		return true
	}

	return false
}

// SetAirDateUtc gets a reference to the given NullableTime and assigns it to the AirDateUtc field.
func (o *EpisodeResource) SetAirDateUtc(v time.Time) {
	o.AirDateUtc.Set(&v)
}
// SetAirDateUtcNil sets the value for AirDateUtc to be an explicit nil
func (o *EpisodeResource) SetAirDateUtcNil() {
	o.AirDateUtc.Set(nil)
}

// UnsetAirDateUtc ensures that no value is present for AirDateUtc, not even an explicit nil
func (o *EpisodeResource) UnsetAirDateUtc() {
	o.AirDateUtc.Unset()
}

// GetLastSearchTime returns the LastSearchTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeResource) GetLastSearchTime() time.Time {
	if o == nil || IsNil(o.LastSearchTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastSearchTime.Get()
}

// GetLastSearchTimeOk returns a tuple with the LastSearchTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeResource) GetLastSearchTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastSearchTime.Get(), o.LastSearchTime.IsSet()
}

// HasLastSearchTime returns a boolean if a field has been set.
func (o *EpisodeResource) HasLastSearchTime() bool {
	if o != nil && o.LastSearchTime.IsSet() {
		return true
	}

	return false
}

// SetLastSearchTime gets a reference to the given NullableTime and assigns it to the LastSearchTime field.
func (o *EpisodeResource) SetLastSearchTime(v time.Time) {
	o.LastSearchTime.Set(&v)
}
// SetLastSearchTimeNil sets the value for LastSearchTime to be an explicit nil
func (o *EpisodeResource) SetLastSearchTimeNil() {
	o.LastSearchTime.Set(nil)
}

// UnsetLastSearchTime ensures that no value is present for LastSearchTime, not even an explicit nil
func (o *EpisodeResource) UnsetLastSearchTime() {
	o.LastSearchTime.Unset()
}

// GetRuntime returns the Runtime field value if set, zero value otherwise.
func (o *EpisodeResource) GetRuntime() int32 {
	if o == nil || IsNil(o.Runtime) {
		var ret int32
		return ret
	}
	return *o.Runtime
}

// GetRuntimeOk returns a tuple with the Runtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpisodeResource) GetRuntimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Runtime) {
		return nil, false
	}
	return o.Runtime, true
}

// HasRuntime returns a boolean if a field has been set.
func (o *EpisodeResource) HasRuntime() bool {
	if o != nil && !IsNil(o.Runtime) {
		return true
	}

	return false
}

// SetRuntime gets a reference to the given int32 and assigns it to the Runtime field.
func (o *EpisodeResource) SetRuntime(v int32) {
	o.Runtime = &v
}

// GetFinaleType returns the FinaleType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeResource) GetFinaleType() string {
	if o == nil || IsNil(o.FinaleType.Get()) {
		var ret string
		return ret
	}
	return *o.FinaleType.Get()
}

// GetFinaleTypeOk returns a tuple with the FinaleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeResource) GetFinaleTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FinaleType.Get(), o.FinaleType.IsSet()
}

// HasFinaleType returns a boolean if a field has been set.
func (o *EpisodeResource) HasFinaleType() bool {
	if o != nil && o.FinaleType.IsSet() {
		return true
	}

	return false
}

// SetFinaleType gets a reference to the given NullableString and assigns it to the FinaleType field.
func (o *EpisodeResource) SetFinaleType(v string) {
	o.FinaleType.Set(&v)
}
// SetFinaleTypeNil sets the value for FinaleType to be an explicit nil
func (o *EpisodeResource) SetFinaleTypeNil() {
	o.FinaleType.Set(nil)
}

// UnsetFinaleType ensures that no value is present for FinaleType, not even an explicit nil
func (o *EpisodeResource) UnsetFinaleType() {
	o.FinaleType.Unset()
}

// GetOverview returns the Overview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeResource) GetOverview() string {
	if o == nil || IsNil(o.Overview.Get()) {
		var ret string
		return ret
	}
	return *o.Overview.Get()
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeResource) GetOverviewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Overview.Get(), o.Overview.IsSet()
}

// HasOverview returns a boolean if a field has been set.
func (o *EpisodeResource) HasOverview() bool {
	if o != nil && o.Overview.IsSet() {
		return true
	}

	return false
}

// SetOverview gets a reference to the given NullableString and assigns it to the Overview field.
func (o *EpisodeResource) SetOverview(v string) {
	o.Overview.Set(&v)
}
// SetOverviewNil sets the value for Overview to be an explicit nil
func (o *EpisodeResource) SetOverviewNil() {
	o.Overview.Set(nil)
}

// UnsetOverview ensures that no value is present for Overview, not even an explicit nil
func (o *EpisodeResource) UnsetOverview() {
	o.Overview.Unset()
}

// GetEpisodeFile returns the EpisodeFile field value if set, zero value otherwise.
func (o *EpisodeResource) GetEpisodeFile() EpisodeFileResource {
	if o == nil || IsNil(o.EpisodeFile) {
		var ret EpisodeFileResource
		return ret
	}
	return *o.EpisodeFile
}

// GetEpisodeFileOk returns a tuple with the EpisodeFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpisodeResource) GetEpisodeFileOk() (*EpisodeFileResource, bool) {
	if o == nil || IsNil(o.EpisodeFile) {
		return nil, false
	}
	return o.EpisodeFile, true
}

// HasEpisodeFile returns a boolean if a field has been set.
func (o *EpisodeResource) HasEpisodeFile() bool {
	if o != nil && !IsNil(o.EpisodeFile) {
		return true
	}

	return false
}

// SetEpisodeFile gets a reference to the given EpisodeFileResource and assigns it to the EpisodeFile field.
func (o *EpisodeResource) SetEpisodeFile(v EpisodeFileResource) {
	o.EpisodeFile = &v
}

// GetHasFile returns the HasFile field value if set, zero value otherwise.
func (o *EpisodeResource) GetHasFile() bool {
	if o == nil || IsNil(o.HasFile) {
		var ret bool
		return ret
	}
	return *o.HasFile
}

// GetHasFileOk returns a tuple with the HasFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpisodeResource) GetHasFileOk() (*bool, bool) {
	if o == nil || IsNil(o.HasFile) {
		return nil, false
	}
	return o.HasFile, true
}

// HasHasFile returns a boolean if a field has been set.
func (o *EpisodeResource) HasHasFile() bool {
	if o != nil && !IsNil(o.HasFile) {
		return true
	}

	return false
}

// SetHasFile gets a reference to the given bool and assigns it to the HasFile field.
func (o *EpisodeResource) SetHasFile(v bool) {
	o.HasFile = &v
}

// GetMonitored returns the Monitored field value if set, zero value otherwise.
func (o *EpisodeResource) GetMonitored() bool {
	if o == nil || IsNil(o.Monitored) {
		var ret bool
		return ret
	}
	return *o.Monitored
}

// GetMonitoredOk returns a tuple with the Monitored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpisodeResource) GetMonitoredOk() (*bool, bool) {
	if o == nil || IsNil(o.Monitored) {
		return nil, false
	}
	return o.Monitored, true
}

// HasMonitored returns a boolean if a field has been set.
func (o *EpisodeResource) HasMonitored() bool {
	if o != nil && !IsNil(o.Monitored) {
		return true
	}

	return false
}

// SetMonitored gets a reference to the given bool and assigns it to the Monitored field.
func (o *EpisodeResource) SetMonitored(v bool) {
	o.Monitored = &v
}

// GetAbsoluteEpisodeNumber returns the AbsoluteEpisodeNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeResource) GetAbsoluteEpisodeNumber() int32 {
	if o == nil || IsNil(o.AbsoluteEpisodeNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.AbsoluteEpisodeNumber.Get()
}

// GetAbsoluteEpisodeNumberOk returns a tuple with the AbsoluteEpisodeNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeResource) GetAbsoluteEpisodeNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AbsoluteEpisodeNumber.Get(), o.AbsoluteEpisodeNumber.IsSet()
}

// HasAbsoluteEpisodeNumber returns a boolean if a field has been set.
func (o *EpisodeResource) HasAbsoluteEpisodeNumber() bool {
	if o != nil && o.AbsoluteEpisodeNumber.IsSet() {
		return true
	}

	return false
}

// SetAbsoluteEpisodeNumber gets a reference to the given NullableInt32 and assigns it to the AbsoluteEpisodeNumber field.
func (o *EpisodeResource) SetAbsoluteEpisodeNumber(v int32) {
	o.AbsoluteEpisodeNumber.Set(&v)
}
// SetAbsoluteEpisodeNumberNil sets the value for AbsoluteEpisodeNumber to be an explicit nil
func (o *EpisodeResource) SetAbsoluteEpisodeNumberNil() {
	o.AbsoluteEpisodeNumber.Set(nil)
}

// UnsetAbsoluteEpisodeNumber ensures that no value is present for AbsoluteEpisodeNumber, not even an explicit nil
func (o *EpisodeResource) UnsetAbsoluteEpisodeNumber() {
	o.AbsoluteEpisodeNumber.Unset()
}

// GetSceneAbsoluteEpisodeNumber returns the SceneAbsoluteEpisodeNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeResource) GetSceneAbsoluteEpisodeNumber() int32 {
	if o == nil || IsNil(o.SceneAbsoluteEpisodeNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.SceneAbsoluteEpisodeNumber.Get()
}

// GetSceneAbsoluteEpisodeNumberOk returns a tuple with the SceneAbsoluteEpisodeNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeResource) GetSceneAbsoluteEpisodeNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SceneAbsoluteEpisodeNumber.Get(), o.SceneAbsoluteEpisodeNumber.IsSet()
}

// HasSceneAbsoluteEpisodeNumber returns a boolean if a field has been set.
func (o *EpisodeResource) HasSceneAbsoluteEpisodeNumber() bool {
	if o != nil && o.SceneAbsoluteEpisodeNumber.IsSet() {
		return true
	}

	return false
}

// SetSceneAbsoluteEpisodeNumber gets a reference to the given NullableInt32 and assigns it to the SceneAbsoluteEpisodeNumber field.
func (o *EpisodeResource) SetSceneAbsoluteEpisodeNumber(v int32) {
	o.SceneAbsoluteEpisodeNumber.Set(&v)
}
// SetSceneAbsoluteEpisodeNumberNil sets the value for SceneAbsoluteEpisodeNumber to be an explicit nil
func (o *EpisodeResource) SetSceneAbsoluteEpisodeNumberNil() {
	o.SceneAbsoluteEpisodeNumber.Set(nil)
}

// UnsetSceneAbsoluteEpisodeNumber ensures that no value is present for SceneAbsoluteEpisodeNumber, not even an explicit nil
func (o *EpisodeResource) UnsetSceneAbsoluteEpisodeNumber() {
	o.SceneAbsoluteEpisodeNumber.Unset()
}

// GetSceneEpisodeNumber returns the SceneEpisodeNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeResource) GetSceneEpisodeNumber() int32 {
	if o == nil || IsNil(o.SceneEpisodeNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.SceneEpisodeNumber.Get()
}

// GetSceneEpisodeNumberOk returns a tuple with the SceneEpisodeNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeResource) GetSceneEpisodeNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SceneEpisodeNumber.Get(), o.SceneEpisodeNumber.IsSet()
}

// HasSceneEpisodeNumber returns a boolean if a field has been set.
func (o *EpisodeResource) HasSceneEpisodeNumber() bool {
	if o != nil && o.SceneEpisodeNumber.IsSet() {
		return true
	}

	return false
}

// SetSceneEpisodeNumber gets a reference to the given NullableInt32 and assigns it to the SceneEpisodeNumber field.
func (o *EpisodeResource) SetSceneEpisodeNumber(v int32) {
	o.SceneEpisodeNumber.Set(&v)
}
// SetSceneEpisodeNumberNil sets the value for SceneEpisodeNumber to be an explicit nil
func (o *EpisodeResource) SetSceneEpisodeNumberNil() {
	o.SceneEpisodeNumber.Set(nil)
}

// UnsetSceneEpisodeNumber ensures that no value is present for SceneEpisodeNumber, not even an explicit nil
func (o *EpisodeResource) UnsetSceneEpisodeNumber() {
	o.SceneEpisodeNumber.Unset()
}

// GetSceneSeasonNumber returns the SceneSeasonNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeResource) GetSceneSeasonNumber() int32 {
	if o == nil || IsNil(o.SceneSeasonNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.SceneSeasonNumber.Get()
}

// GetSceneSeasonNumberOk returns a tuple with the SceneSeasonNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeResource) GetSceneSeasonNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SceneSeasonNumber.Get(), o.SceneSeasonNumber.IsSet()
}

// HasSceneSeasonNumber returns a boolean if a field has been set.
func (o *EpisodeResource) HasSceneSeasonNumber() bool {
	if o != nil && o.SceneSeasonNumber.IsSet() {
		return true
	}

	return false
}

// SetSceneSeasonNumber gets a reference to the given NullableInt32 and assigns it to the SceneSeasonNumber field.
func (o *EpisodeResource) SetSceneSeasonNumber(v int32) {
	o.SceneSeasonNumber.Set(&v)
}
// SetSceneSeasonNumberNil sets the value for SceneSeasonNumber to be an explicit nil
func (o *EpisodeResource) SetSceneSeasonNumberNil() {
	o.SceneSeasonNumber.Set(nil)
}

// UnsetSceneSeasonNumber ensures that no value is present for SceneSeasonNumber, not even an explicit nil
func (o *EpisodeResource) UnsetSceneSeasonNumber() {
	o.SceneSeasonNumber.Unset()
}

// GetUnverifiedSceneNumbering returns the UnverifiedSceneNumbering field value if set, zero value otherwise.
func (o *EpisodeResource) GetUnverifiedSceneNumbering() bool {
	if o == nil || IsNil(o.UnverifiedSceneNumbering) {
		var ret bool
		return ret
	}
	return *o.UnverifiedSceneNumbering
}

// GetUnverifiedSceneNumberingOk returns a tuple with the UnverifiedSceneNumbering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpisodeResource) GetUnverifiedSceneNumberingOk() (*bool, bool) {
	if o == nil || IsNil(o.UnverifiedSceneNumbering) {
		return nil, false
	}
	return o.UnverifiedSceneNumbering, true
}

// HasUnverifiedSceneNumbering returns a boolean if a field has been set.
func (o *EpisodeResource) HasUnverifiedSceneNumbering() bool {
	if o != nil && !IsNil(o.UnverifiedSceneNumbering) {
		return true
	}

	return false
}

// SetUnverifiedSceneNumbering gets a reference to the given bool and assigns it to the UnverifiedSceneNumbering field.
func (o *EpisodeResource) SetUnverifiedSceneNumbering(v bool) {
	o.UnverifiedSceneNumbering = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeResource) GetEndTime() time.Time {
	if o == nil || IsNil(o.EndTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EndTime.Get()
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeResource) GetEndTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndTime.Get(), o.EndTime.IsSet()
}

// HasEndTime returns a boolean if a field has been set.
func (o *EpisodeResource) HasEndTime() bool {
	if o != nil && o.EndTime.IsSet() {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given NullableTime and assigns it to the EndTime field.
func (o *EpisodeResource) SetEndTime(v time.Time) {
	o.EndTime.Set(&v)
}
// SetEndTimeNil sets the value for EndTime to be an explicit nil
func (o *EpisodeResource) SetEndTimeNil() {
	o.EndTime.Set(nil)
}

// UnsetEndTime ensures that no value is present for EndTime, not even an explicit nil
func (o *EpisodeResource) UnsetEndTime() {
	o.EndTime.Unset()
}

// GetGrabDate returns the GrabDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeResource) GetGrabDate() time.Time {
	if o == nil || IsNil(o.GrabDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.GrabDate.Get()
}

// GetGrabDateOk returns a tuple with the GrabDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeResource) GetGrabDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrabDate.Get(), o.GrabDate.IsSet()
}

// HasGrabDate returns a boolean if a field has been set.
func (o *EpisodeResource) HasGrabDate() bool {
	if o != nil && o.GrabDate.IsSet() {
		return true
	}

	return false
}

// SetGrabDate gets a reference to the given NullableTime and assigns it to the GrabDate field.
func (o *EpisodeResource) SetGrabDate(v time.Time) {
	o.GrabDate.Set(&v)
}
// SetGrabDateNil sets the value for GrabDate to be an explicit nil
func (o *EpisodeResource) SetGrabDateNil() {
	o.GrabDate.Set(nil)
}

// UnsetGrabDate ensures that no value is present for GrabDate, not even an explicit nil
func (o *EpisodeResource) UnsetGrabDate() {
	o.GrabDate.Unset()
}

// GetSeries returns the Series field value if set, zero value otherwise.
func (o *EpisodeResource) GetSeries() SeriesResource {
	if o == nil || IsNil(o.Series) {
		var ret SeriesResource
		return ret
	}
	return *o.Series
}

// GetSeriesOk returns a tuple with the Series field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpisodeResource) GetSeriesOk() (*SeriesResource, bool) {
	if o == nil || IsNil(o.Series) {
		return nil, false
	}
	return o.Series, true
}

// HasSeries returns a boolean if a field has been set.
func (o *EpisodeResource) HasSeries() bool {
	if o != nil && !IsNil(o.Series) {
		return true
	}

	return false
}

// SetSeries gets a reference to the given SeriesResource and assigns it to the Series field.
func (o *EpisodeResource) SetSeries(v SeriesResource) {
	o.Series = &v
}

// GetImages returns the Images field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeResource) GetImages() []MediaCover {
	if o == nil {
		var ret []MediaCover
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeResource) GetImagesOk() ([]MediaCover, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *EpisodeResource) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []MediaCover and assigns it to the Images field.
func (o *EpisodeResource) SetImages(v []MediaCover) {
	o.Images = v
}

func (o EpisodeResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EpisodeResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SeriesId) {
		toSerialize["seriesId"] = o.SeriesId
	}
	if !IsNil(o.TvdbId) {
		toSerialize["tvdbId"] = o.TvdbId
	}
	if !IsNil(o.EpisodeFileId) {
		toSerialize["episodeFileId"] = o.EpisodeFileId
	}
	if !IsNil(o.SeasonNumber) {
		toSerialize["seasonNumber"] = o.SeasonNumber
	}
	if !IsNil(o.EpisodeNumber) {
		toSerialize["episodeNumber"] = o.EpisodeNumber
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.AirDate.IsSet() {
		toSerialize["airDate"] = o.AirDate.Get()
	}
	if o.AirDateUtc.IsSet() {
		toSerialize["airDateUtc"] = o.AirDateUtc.Get()
	}
	if o.LastSearchTime.IsSet() {
		toSerialize["lastSearchTime"] = o.LastSearchTime.Get()
	}
	if !IsNil(o.Runtime) {
		toSerialize["runtime"] = o.Runtime
	}
	if o.FinaleType.IsSet() {
		toSerialize["finaleType"] = o.FinaleType.Get()
	}
	if o.Overview.IsSet() {
		toSerialize["overview"] = o.Overview.Get()
	}
	if !IsNil(o.EpisodeFile) {
		toSerialize["episodeFile"] = o.EpisodeFile
	}
	if !IsNil(o.HasFile) {
		toSerialize["hasFile"] = o.HasFile
	}
	if !IsNil(o.Monitored) {
		toSerialize["monitored"] = o.Monitored
	}
	if o.AbsoluteEpisodeNumber.IsSet() {
		toSerialize["absoluteEpisodeNumber"] = o.AbsoluteEpisodeNumber.Get()
	}
	if o.SceneAbsoluteEpisodeNumber.IsSet() {
		toSerialize["sceneAbsoluteEpisodeNumber"] = o.SceneAbsoluteEpisodeNumber.Get()
	}
	if o.SceneEpisodeNumber.IsSet() {
		toSerialize["sceneEpisodeNumber"] = o.SceneEpisodeNumber.Get()
	}
	if o.SceneSeasonNumber.IsSet() {
		toSerialize["sceneSeasonNumber"] = o.SceneSeasonNumber.Get()
	}
	if !IsNil(o.UnverifiedSceneNumbering) {
		toSerialize["unverifiedSceneNumbering"] = o.UnverifiedSceneNumbering
	}
	if o.EndTime.IsSet() {
		toSerialize["endTime"] = o.EndTime.Get()
	}
	if o.GrabDate.IsSet() {
		toSerialize["grabDate"] = o.GrabDate.Get()
	}
	if !IsNil(o.Series) {
		toSerialize["series"] = o.Series
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	return toSerialize, nil
}

type NullableEpisodeResource struct {
	value *EpisodeResource
	isSet bool
}

func (v NullableEpisodeResource) Get() *EpisodeResource {
	return v.value
}

func (v *NullableEpisodeResource) Set(val *EpisodeResource) {
	v.value = val
	v.isSet = true
}

func (v NullableEpisodeResource) IsSet() bool {
	return v.isSet
}

func (v *NullableEpisodeResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEpisodeResource(val *EpisodeResource) *NullableEpisodeResource {
	return &NullableEpisodeResource{value: val, isSet: true}
}

func (v NullableEpisodeResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEpisodeResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


